<?php
require_once 'config.php';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
requireAdmin();

$currentUser = getCurrentUser();
$anime_id = (int)($_GET['id'] ?? 0);

if (!$anime_id) {
    redirect('index.php');
}

$pdo = getDB();
$error = '';
$success = '';

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–Ω–∏–º–µ
$stmt = $pdo->prepare("SELECT * FROM anime WHERE id = ?");
$stmt->execute([$anime_id]);
$anime = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$anime) {
    redirect('index.php');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSRF —Ç–æ–∫–µ–Ω–∞
    if (!isset($_POST['csrf_token']) || !validateCSRFToken($_POST['csrf_token'])) {
        $error = 'CSRF —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
    } else {
        $title = trim($_POST['title']);
        $description = trim($_POST['description']);
        $genres = $_POST['genres'] ?? [];
        $genre = formatGenres($genres);
        $year = (int)$_POST['year'];
        $studio = trim($_POST['studio']);
        $image_url = trim($_POST['image_url']);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–π–ª–µ—Ä–∞
        $trailer_method = $_POST['trailer_method'] ?? 'url';
        $trailer_url = $anime['trailer_url']; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π
        $trailer_file_path = null;

        if (empty($title)) {
            $error = '–ù–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–µ–π–ª–µ—Ä–∞
            if ($trailer_method === 'url') {
                $trailer_url = trim($_POST['trailer_url']);
            } elseif ($trailer_method === 'upload' && isset($_FILES['trailer_file']) && $_FILES['trailer_file']['error'] === UPLOAD_ERR_OK) {
                $allowedTypes = ['video/mp4', 'video/webm', 'video/avi'];
                $maxSize = 100 * 1024 * 1024; // 100MB
                $fileType = $_FILES['trailer_file']['type'];
                $fileSize = $_FILES['trailer_file']['size'];
                $fileTmp = $_FILES['trailer_file']['tmp_name'];
                $fileExt = strtolower(pathinfo($_FILES['trailer_file']['name'], PATHINFO_EXTENSION));

                if (!in_array($fileType, $allowedTypes)) {
                    $error = '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ. –†–∞–∑—Ä–µ—à–µ–Ω—ã: MP4, WebM, AVI';
                } elseif ($fileSize > $maxSize) {
                    $error = '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100MB';
                } else {
                    $uploadDir = 'uploads/trailers/';
                    if (!is_dir($uploadDir)) {
                        mkdir($uploadDir, 0777, true);
                    }
                    $newFileName = uniqid('trailer_', true) . '.' . $fileExt;
                    $destination = $uploadDir . $newFileName;
                    if (move_uploaded_file($fileTmp, $destination)) {
                        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
                        if ($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') !== false && file_exists($anime['trailer_url'])) {
                            unlink($anime['trailer_url']);
                        }
                        $trailer_url = $destination;
                    } else {
                        $error = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞.';
                    }
                }
            }

            if (!$error) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                $stmt = $pdo->prepare("
                    UPDATE anime
                    SET title = ?, description = ?, genre = ?, year = ?, studio = ?, image_url = ?, trailer_url = ?
                    WHERE id = ?
                ");

                if ($stmt->execute([$title, $description, $genre, $year, $studio, $image_url, $trailer_url, $anime_id])) {
                    $success = '–ê–Ω–∏–º–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!';
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    $anime['title'] = $title;
                    $anime['description'] = $description;
                    $anime['genre'] = $genre;
                    $anime['year'] = $year;
                    $anime['studio'] = $studio;
                    $anime['image_url'] = $image_url;
                    $anime['trailer_url'] = $trailer_url;
                } else {
                    $error = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–Ω–∏–º–µ';
                }
            }
        }
    }
}
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∏–º–µ - <?php echo SITE_NAME; ?></title>
    <link rel="stylesheet" href="style.css">
    <style>
        /* –°—Ç–∏–ª–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∞–≤–∞—Ç–∞—Ä–∫–∏ */
        .avatar-dropdown {
            position: relative;
            display: inline-block;
        }

        .avatar-trigger {
            cursor: pointer;
        }

        .avatar-dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            border: 1px solid rgba(255, 255, 255, 0.2);
            min-width: 200px;
            z-index: 1000;
            margin-top: 8px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            pointer-events: none;
        }

        .avatar-dropdown-menu.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
            pointer-events: auto;
        }

        .dropdown-item {
            padding: 0;
        }

        .dropdown-button {
            display: block;
            width: 100%;
            padding: 12px 16px;
            background: none;
            border: none;
            text-align: left;
            cursor: pointer;
            color: var(--text-primary);
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s ease;
            text-decoration: none;
            border-radius: 0;
        }

        .dropdown-button:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
        }

        .dropdown-button.delete:hover {
            background: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

        .dropdown-item:first-child .dropdown-button {
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .dropdown-item:last-child .dropdown-button {
            border-bottom-left-radius: 12px;
            border-bottom-right-radius: 12px;
        }

        /* Dark theme styles */
        [data-theme="dark"] .avatar-dropdown-menu {
            background: rgba(30, 30, 30, 0.95);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        [data-theme="dark"] .dropdown-button:hover {
            background: rgba(99, 102, 241, 0.2);
            color: #6366f1;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ —Ç—Ä–µ–π–ª–µ—Ä–∞ */
        .trailer-method-selector {
            display: flex;
            gap: 25px;
            align-items: center;
            margin-bottom: 15px;
        }

        .trailer-method-selector label {
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 500;
            cursor: pointer;
            margin: 0;
        }

        .trailer-method-selector input[type="radio"] {
            margin: 0;
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container">
            <h1 class="logo"><a href="index.php"><?php echo SITE_NAME; ?></a></h1>
            <nav class="nav">
                <a href="index.php">–ì–ª–∞–≤–Ω–∞—è</a>
                <a href="add_anime.php">–î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–µ</a>

                <a href="logout.php">–í—ã–π—Ç–∏</a>
                <div class="user-info avatar-dropdown">
                    <div class="avatar-trigger" onclick="toggleAvatarDropdown()">
                        <span class="user-name"><?php echo h($currentUser['username']); ?></span>
                        <?php if ($currentUser['avatar'] && file_exists($currentUser['avatar'])): ?>
                            <img src="<?php echo h($currentUser['avatar']); ?>" alt="–ê–≤–∞—Ç–∞—Ä–∫–∞ <?php echo h($currentUser['username']); ?>" class="user-avatar">
                        <?php else: ?>
                            <div class="user-avatar" title="<?php echo h($currentUser['username']); ?>">
                                <?php echo strtoupper(substr($currentUser['username'], 0, 1)); ?>
                            </div>
                        <?php endif; ?>
                    </div>
                        <div class="avatar-dropdown-menu" id="avatarDropdown">
                            <div class="dropdown-item">
                                <button type="button" class="dropdown-button" onclick="window.location.href='profile.php'">
                                    üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                                </button>
                            </div>
                            <div class="dropdown-item">
                                <form action="upload_avatar.php" method="post" enctype="multipart/form-data" id="avatarForm">
                                    <input type="file" name="avatar" id="avatarInput" accept="image/*" style="display: none;" onchange="handleAvatarUpload(this)">
                                    <label for="avatarInput" class="dropdown-button">
                                        üìÅ –ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É
                                    </label>
                                </form>
                            </div>
                            <?php if ($currentUser['avatar']): ?>
                            <div class="dropdown-item">
                                <form action="upload_avatar.php" method="post">
                                    <button type="submit" name="delete_avatar" class="dropdown-button delete" onclick="return confirm('–£–¥–∞–ª–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É?')">
                                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É
                                    </button>
                                </form>
                            </div>
                            <?php endif; ?>
                        </div>
                    </div>
                <button class="theme-toggle" id="themeToggle" title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É">
                    <span class="theme-icon sun">‚òÄÔ∏è</span>
                    <span class="theme-icon moon">üåô</span>
                </button>
            </nav>
        </div>
    </header>

    <main class="main">
        <div class="container">
            <div class="form-container">
                <h2>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∏–º–µ: <?php echo h($anime['title']); ?></h2>

                <?php if ($error): ?>
                    <div class="error"><?php echo $error; ?></div>
                <?php endif; ?>

                <?php if ($success): ?>
                    <div class="success"><?php echo $success; ?></div>
                <?php endif; ?>

                <form method="POST" class="add-anime-form" enctype="multipart/form-data">
                    <!-- CSRF –∑–∞—â–∏—Ç–∞ -->
                    <input type="hidden" name="csrf_token" value="<?php echo h(generateCSRFToken()); ?>">
                    <div class="form-group">
                        <label for="title">–ù–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ *</label>
                        <input type="text" id="title" name="title" value="<?php echo h($anime['title']); ?>" required>
                    </div>

                    <div class="form-group">
                        <label for="description">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea id="description" name="description" rows="6" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Å—é–∂–µ—Ç–∞ –∞–Ω–∏–º–µ..."><?php echo h($anime['description']); ?></textarea>
                    </div>

                    <div class="form-group">
                        <label for="genres">–ñ–∞–Ω—Ä—ã: *</label>
                        <div class="custom-multiselect" id="genreMultiselect">
                            <button type="button" class="multiselect-button" id="genreButton">
                                <span class="multiselect-button-text placeholder">–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã</span>
                                <span class="multiselect-arrow">‚ñº</span>
                            </button>
                            <div class="multiselect-dropdown" id="genreDropdown" style="display: none;">
                                <input type="text" class="multiselect-search" placeholder="üîç –ü–æ–∏—Å–∫ –∂–∞–Ω—Ä–æ–≤..." id="genreSearch">
                                <div class="multiselect-option select-all" data-value="all">
                                    <div class="multiselect-checkbox"></div>
                                    <span class="multiselect-label">–í—ã–±—Ä–∞—Ç—å –≤—Å–µ</span>
                                </div>
                                <div class="multiselect-option select-all" data-value="none">
                                    <div class="multiselect-checkbox"></div>
                                    <span class="multiselect-label">–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë</span>
                                </div>
                                <?php
                                $availableGenres = getAvailableGenres();
                                $selectedGenres = parseGenres($anime['genre']);
                                foreach ($availableGenres as $genre): ?>
                                    <div class="multiselect-option <?php echo in_array($genre, $selectedGenres) ? 'selected' : ''; ?>" data-value="<?php echo h($genre); ?>">
                                        <div class="multiselect-checkbox"></div>
                                        <span class="multiselect-label"><?php echo h($genre); ?></span>
                                    </div>
                                <?php endforeach; ?>
                            </div>
                        </div>
                        <!-- –°–∫—Ä—ã—Ç—ã–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π select –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã -->
                        <select name="genres[]" id="genres" multiple class="genre-filter-select" required style="display: none;">
                            <?php foreach ($availableGenres as $genre): ?>
                                <option value="<?php echo h($genre); ?>" <?php echo in_array($genre, $selectedGenres) ? 'selected' : ''; ?>>
                                    <?php echo h($genre); ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                        <small class="form-hint">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∂–∞–Ω—Ä–æ–≤ –¥–ª—è –∞–Ω–∏–º–µ</small>
                    </div>

                    <div class="form-group">
                        <label for="year">–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞</label>
                        <input type="number" id="year" name="year" value="<?php echo $anime['year']; ?>" min="1900" max="2030" placeholder="2023">
                    </div>

                    <div class="form-group">
                        <label for="studio">–°—Ç—É–¥–∏—è</label>
                        <input type="text" id="studio" name="studio" value="<?php echo h($anime['studio'] ?? ''); ?>" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—É–¥–∏–∏...">
                    </div>

                    <div class="form-group">
                        <label for="image_url">URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</label>
                        <input type="url" id="image_url" name="image_url" value="<?php echo h($anime['image_url']); ?>" placeholder="https://example.com/image.jpg">
                    </div>

                    <div class="form-group">
                        <label>–¢—Ä–µ–π–ª–µ—Ä</label>
                        <div class="trailer-method-selector">
                            <label>
                                üîó –í—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É
                                <input type="radio" name="trailer_method" value="url" <?php if (!($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0)) echo 'checked'; ?> onclick="toggleTrailerInput('url')">
                            </label>
                            <label>
                                üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
                                <input type="radio" name="trailer_method" value="upload" <?php if ($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0) echo 'checked'; ?> onclick="toggleTrailerInput('upload')">
                            </label>
                        </div>
                        <div id="trailer_url_block" style="margin-top: 10px;<?php if ($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0) echo 'display:none;'; ?>">
                            <input type="url" id="trailer_url" name="trailer_url" value="<?php echo h($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0 ? '' : $anime['trailer_url']); ?>" placeholder="https://youtube.com/watch?v=... –∏–ª–∏ https://rutube.ru/video/...">
                            <small class="form-hint">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è YouTube, Rutube, –∞ —Ç–∞–∫–∂–µ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ MP4 –≤–∏–¥–µ–æ</small>
                        </div>
                        <div id="trailer_file_block" style="margin-top: 10px;<?php if (!($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0)) echo 'display:none;'; ?>">
                            <input type="file" name="trailer_file" id="trailer_file" accept="video/mp4,video/webm,video/avi">
                            <small class="form-hint">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100MB. –†–∞–∑—Ä–µ—à–µ–Ω—ã: MP4, WebM, AVI</small>
                            <?php if ($anime['trailer_url'] && strpos($anime['trailer_url'], 'uploads/trailers/') === 0): ?>
                                <div style="margin-top: 8px;">
                                    <video src="<?php echo h($anime['trailer_url']); ?>" controls style="max-width: 320px; max-height: 180px;"></video>
                                    <div>
                                        <small>–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ç—Ä–µ–π–ª–µ—Ä: <?php echo basename($anime['trailer_url']); ?></small>
                                    </div>
                                </div>
                            <?php endif; ?>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
                        <a href="anime.php?id=<?php echo $anime_id; ?>" class="btn btn-secondary">‚ùå –û—Ç–º–µ–Ω–∞</a>
                    </div>
                </form>
            </div>
        </div>
    </main>

    <footer class="footer">
        <div class="container">
            <p>&copy; 2025 <?php echo SITE_NAME; ?>. –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.</p>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∂–∞–Ω—Ä–æ–≤
            const multiselect = document.getElementById('genreButton');
            const dropdown = document.getElementById('genreDropdown');
            const buttonText = multiselect.querySelector('.multiselect-button-text');
            const arrow = multiselect.querySelector('.multiselect-arrow');
            const searchInput = document.getElementById('genreSearch');
            const originalSelect = document.getElementById('genres');

            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–ø—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
            const allOptions = dropdown.querySelectorAll('.multiselect-option');
            const options = Array.from(allOptions).filter(option =>
                !option.classList.contains('select-all') &&
                option.dataset.value !== 'all' &&
                option.dataset.value !== 'none'
            );
            const selectAllOption = dropdown.querySelector('[data-value="all"]');
            const clearAllOption = dropdown.querySelector('[data-value="none"]');

            let isOpen = false;

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            function updateButtonText() {
                const selected = options.filter(option => option.classList.contains('selected'));
                const selectedValues = selected.map(option => option.dataset.value);

                if (selected.length === 0) {
                    buttonText.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã';
                    buttonText.className = 'multiselect-button-text placeholder';
                } else if (selected.length === 1) {
                    buttonText.textContent = selected[0].querySelector('.multiselect-label').textContent;
                    buttonText.className = 'multiselect-button-text';
                } else if (selected.length <= 3) {
                    buttonText.textContent = selected.map(option =>
                        option.querySelector('.multiselect-label').textContent
                    ).join(', ');
                    buttonText.className = 'multiselect-button-text';
                } else {
                    buttonText.innerHTML = `–í—ã–±—Ä–∞–Ω–æ: <span class="multiselect-count">${selected.length}</span>`;
                    buttonText.className = 'multiselect-button-text';
                }

                // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º select
                Array.from(originalSelect.options).forEach(option => {
                    option.selected = selectedValues.includes(option.value);
                });
            }

            // –û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
            function toggleDropdown() {
                isOpen = !isOpen;

                if (isOpen) {
                    dropdown.style.display = 'block';
                    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
                    setTimeout(() => {
                        dropdown.classList.add('open');
                    }, 10);
                    multiselect.classList.add('active');
                    arrow.textContent = '‚ñ≤';
                    searchInput.focus();
                } else {
                    dropdown.classList.remove('open');
                    multiselect.classList.remove('active');
                    arrow.textContent = '‚ñº';
                    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
                    setTimeout(() => {
                        if (!isOpen) dropdown.style.display = 'none';
                    }, 300);
                }
            }

            // –ó–∞–∫—Ä—ã—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
            function closeDropdown() {
                if (isOpen) {
                    isOpen = false;
                    dropdown.classList.remove('open');
                    multiselect.classList.remove('active');
                    arrow.textContent = '‚ñº';
                    searchInput.value = '';
                    filterOptions('');
                    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
                    setTimeout(() => {
                        if (!isOpen) dropdown.style.display = 'none';
                    }, 300);
                }
            }

            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ü–∏–π –ø–æ –ø–æ–∏—Å–∫—É
            function filterOptions(searchTerm) {
                const term = searchTerm.toLowerCase().trim();

                // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–ø—Ü–∏–∏
                if (term === '') {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–±—ã—á–Ω—ã–µ –æ–ø—Ü–∏–∏
                    options.forEach(option => {
                        option.style.display = 'flex';
                    });

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –æ–ø—Ü–∏–∏
                    if (selectAllOption) selectAllOption.style.display = 'flex';
                    if (clearAllOption) clearAllOption.style.display = 'flex';

                    // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                    const noResultsMessage = dropdown.querySelector('.multiselect-no-results');
                    if (noResultsMessage) {
                        noResultsMessage.style.display = 'none';
                    }
                    return;
                }

                // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –æ–ø—Ü–∏–∏
                if (selectAllOption) selectAllOption.style.display = 'flex';
                if (clearAllOption) clearAllOption.style.display = 'flex';

                // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–±—ã—á–Ω—ã–µ –æ–ø—Ü–∏–∏ –∂–∞–Ω—Ä–æ–≤
                const hasVisibleOptions = options.some(option => {
                    const label = option.querySelector('.multiselect-label').textContent.toLowerCase();
                    const matches = label.startsWith(term);
                    option.style.display = matches ? 'flex' : 'none';
                    return matches;
                });

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                let noResultsMessage = dropdown.querySelector('.multiselect-no-results');
                if (!hasVisibleOptions) {
                    if (!noResultsMessage) {
                        noResultsMessage = document.createElement('div');
                        noResultsMessage.className = 'multiselect-no-results';
                        noResultsMessage.textContent = '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
                        dropdown.appendChild(noResultsMessage);
                    }
                    noResultsMessage.style.display = 'block';
                } else if (noResultsMessage) {
                    noResultsMessage.style.display = 'none';
                }
            }

            // –í—ã–±—Ä–∞—Ç—å –≤—Å–µ –∂–∞–Ω—Ä—ã
            function selectAll() {
                const visibleOptions = options.filter(option =>
                    option.style.display !== 'none'
                );

                visibleOptions.forEach(option => {
                    option.classList.add('selected');
                });
                updateButtonText();
            }

            // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã
            function clearAll() {
                options.forEach(option => {
                    option.classList.remove('selected');
                });
                updateButtonText();
            }

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            multiselect.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                toggleDropdown();
            });

            // –ö–ª–∏–∫ –ø–æ –æ–ø—Ü–∏–∏
            options.forEach(option => {
                option.addEventListener('click', function(e) {
                    e.stopPropagation();
                    this.classList.toggle('selected');
                    updateButtonText();
                });
            });

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ" –∏ "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë"
            if (selectAllOption) {
                selectAllOption.addEventListener('click', function(e) {
                    e.stopPropagation();
                    selectAll();
                });
            }

            if (clearAllOption) {
                clearAllOption.addEventListener('click', function(e) {
                    e.stopPropagation();
                    clearAll();
                });
            }

            // –ü–æ–∏—Å–∫
            searchInput.addEventListener('input', function() {
                filterOptions(this.value);
            });

            searchInput.addEventListener('click', function(e) {
                e.stopPropagation();
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–∞
            document.addEventListener('click', function(e) {
                if (!multiselect.contains(e.target) && !dropdown.contains(e.target)) {
                    closeDropdown();
                }
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && isOpen) {
                    closeDropdown();
                }
            });

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            updateButtonText();

            // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏
            const themeToggle = document.getElementById('themeToggle');
            const body = document.body;

            // –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–∑ localStorage
            const savedTheme = localStorage.getItem('theme') || 'light';
            body.setAttribute('data-theme', savedTheme);

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
            if (themeToggle) {
                themeToggle.addEventListener('click', function() {
                    const currentTheme = body.getAttribute('data-theme');
                    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

                    body.setAttribute('data-theme', newTheme);
                    localStorage.setItem('theme', newTheme);

                    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
                    body.style.transition = 'all 0.3s ease';
                    setTimeout(() => {
                        body.style.transition = '';
                    }, 300);
                });
            }

            // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–∏–º —Å–ø–∏—Å–∫–æ–º –∞–≤–∞—Ç–∞—Ä–∫–∏
            window.toggleAvatarDropdown = function() {
                const dropdown = document.getElementById('avatarDropdown');
                if (dropdown) {
                    dropdown.classList.toggle('show');
                }
            }

            // –ó–∞–∫—Ä—ã—Ç—å dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
            document.addEventListener('click', function(event) {
                const dropdown = document.getElementById('avatarDropdown');
                const avatarDropdown = event.target.closest('.avatar-dropdown');

                if (!avatarDropdown && dropdown && dropdown.classList.contains('show')) {
                    dropdown.classList.remove('show');
                }
            });

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
            window.handleAvatarUpload = function(input) {
                if (input.files && input.files[0]) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (5MB = 5 * 1024 * 1024 bytes)
                    const maxSize = 5 * 1024 * 1024;
                    if (input.files[0].size > maxSize) {
                        alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB');
                        input.value = '';
                        return;
                    }

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                    if (!allowedTypes.includes(input.files[0].type)) {
                        alert('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPEG, PNG, GIF, WebP');
                        input.value = '';
                        return;
                    }

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
                    input.closest('form').submit();
                }
            }

            // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É URL –∏ –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–∞ —Ç—Ä–µ–π–ª–µ—Ä–∞
            window.toggleTrailerInput = function(method) {
                var urlBlock = document.getElementById('trailer_url_block');
                var fileBlock = document.getElementById('trailer_file_block');
                if (method === 'url') {
                    urlBlock.style.display = '';
                    fileBlock.style.display = 'none';
                } else {
                    urlBlock.style.display = 'none';
                    fileBlock.style.display = '';
                }
            };

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–π–ª–µ—Ä–Ω—ã—Ö –ø–æ–ª–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            (function() {
                var urlRadio = document.querySelector('input[name="trailer_method"][value="url"]');
                var uploadRadio = document.querySelector('input[name="trailer_method"][value="upload"]');
                if (urlRadio && urlRadio.checked) {
                    window.toggleTrailerInput('url');
                } else if (uploadRadio && uploadRadio.checked) {
                    window.toggleTrailerInput('upload');
                }
            })();
        });
    </script>
</body>
</html>
